Details and functionality: The minus operator overload provides the ability to remove like instances of two lists.
   
Syntax:
testList1<int> {1, 3, 5,}
testList2<int> {2, 1, 6}

testList1 - testList2 = {""}

  Parameters
    Provide two list objects of the same type
    
    testList1 - testList2
  
  Returns
      A list of specified type(int or string for example)
      
      
      
      
Example code:

            // arrange
            CustomList<int> testList1 = new CustomList<int>();
            CustomList<int> testList2 = new CustomList<int>();
            CustomList<int> minusOperator = new CustomList<int>();
            testList1.Add(1);
            testList1.Add(3);
            testList1.Add(5);
            testList2.Add(2);
            testList2.Add(1);
            testList2.Add(6);
            string expected = "";

            // act
            minusOperator = testList1 - testList2;
            string actual = minusOperator.ToString();

            // assert
            Assert.AreEqual(expected, actual);
            
            
Expected output: Returns true